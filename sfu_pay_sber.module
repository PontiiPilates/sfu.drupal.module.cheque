<?php

/**
 * Implement hook_init().
 */
function sfu_pay_sber_init()
{
	drupal_add_js(drupal_get_path('module', 'sfu_pay_sber') . '/sfu_pay_sber.js');
}

/**
 * Implement hook_menu().
 */
function sfu_pay_sber_menu()
{
	// Страница успешной транзакции.
	$items['transaction-success'] = array(
		'title' => 'Оплата успешно завершена',
		'page callback' => 'transaction_success',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK
	);
	// Страница неудавшейся транзакции.
	$items['transaction-failure'] = array(
		'title' => 'Не удалось произвести оплату',
		'page callback' => 'transaction_failure',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK
	);
	// Страница вывода информации о транзакции.
	$items['sberbank-cheque'] = array(
		'title' => 'Информация о платеже за услугу СФУ',
		'page callback' => 'cheque_output',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK
	);
	// TODO: создать страницу для просмотра новой базы данных.
	// TODO: создать страницу в которой можно получить чек только по orderId. На случай, если по какой то причине информация не была занесена в базу данных.
	return $items;
}

/**
 * Внесение успешной транзакции в базу данных.
 * Отправка на почту плательщика ссылки на чек.
 * Тестовые параметры: ?orderId=525606fb-cae8-70b7-a1be-05710211d19b&lang=ru
 */
function transaction_success()
{
	// Подключение файла с доступами.
	require('access.php');

	// Получение orderId из параметров запроса.
	$order_id = $_GET['orderId'];

	// Запрос на получение статуса транзакции.
	$get_transaction_info = "$order_status_do?userName=$api_name&password=$api_pass&orderId=$order_id";
	// Отправка запроса.
	$get_transaction_info = file_get_contents($get_transaction_info);
	// Преобразование json в ассоциативный массив.
	$get_transaction_info = json_decode($get_transaction_info, TRUE);

	// Получение полей формы, заполненной пользователем перед совершением транзакции.
	$get_fields = $get_transaction_info['merchantOrderParams'];
	// Преобразование имен и значений переданных полей формы в ассоциативный массив.
	$fields = array();
	foreach ($get_fields as $key => $value) {
		$fields[$value['name']] = $value['value'];
	};

	// Подготовка значений для занесения в базу данных.
	$description    = $fields['Описание'];
	$libnumber      = $fields['Читательский билет'];
	$personal       = $fields['personal'];
	$package        = $fields['Количество проверок'];
	$surname        = $fields['Фамилия читателя'];
	$address        = $fields['Адрес'];
	$dogovor        = $fields['Договор'];
	$hostel         = $fields['Общежитие'];
	$status         = $fields['Статус'];
	$payer          = $fields['Плательщик'];
	$phone          = $fields['Телефон'];
	$event          = $fields['Событие'];
	$email          = $fields['Почта'];
	$room           = $fields['Комната'];
	$url            = $fields['URL'];
	$fio            = $fields['ФИО'];
	$org            = $fields['Организация'];
	$order_number   = $get_transaction_info['orderNumber'];
	$order_status   = $get_transaction_info['orderStatus'];
	$service        = $get_transaction_info['orderDescription'];
	$cost           = $get_transaction_info['paymentAmountInfo']['approvedAmount'] / 100;
	$password 		= _password_generate();

	// Преобразование статуса транзакции для занесения в базу данных.
	if ($order_status == 2) {
		$order_status = 'оплачено';
	};
	// Преобразования ссылки на чек для занесения в базу данных.
	if ($_SERVER['REMOTE_ADDR'] == '10.0.73.91') {
		$link_cheque = "https://pay.sfu-kras.ru/sberbank-cheque?orderNumber=$order_number&password=$password";
	} elseif ($_SERVER['REMOTE_ADDR'] == '127.0.0.1') {
		$link_cheque = "http://hg.pay/sberbank-cheque?orderNumber=$order_number&password=$password";
	}

	// Проверка наличия в базе транзакции по orderId.
	$check = _db_query_check($connect, "SELECT * FROM `transaction` WHERE `order_id` = '$order_id'");

	// Если транзакции нет в базе данных, то добавляем ее.
	if ($check == 0) {
		$output .= 'Транзакции еще нет в базе данных.<br>';
		$res = _db_query_add($connect, "INSERT INTO `transaction` VALUES (NULL, '$description', '$libnumber', '$personal', '$package', '$service', '$surname', '$address', '$dogovor', '$hostel', '$status', '$payer', '$phone', '$event', '$email', '$cost', '$room', '$url', '$fio', '$org', '$order_id', '$password', '$order_number', '$order_status', CURRENT_TIMESTAMP, '', '$link_cheque')");
		if ($res) {
			$output .= 'Транзакция добавлена в базу данных.<br>';
			// Отправка сообщения с ссылкой на чек.
			$send = drupal_mail('sfu_pay_sber', 'key_mail_sber', $email, language_default(), array('body' => t($link_cheque)));
			// Проверка отправки с внесением отметки в базу данных.
			if ($send['result'] == 1) {
				_db_query_update($connect, "UPDATE `transaction` SET `mail_send` = 'send' WHERE `order_number` = '$order_number'");
				$output .= 'Ссылка на чек отправлена на почту.<br>';
			} else {
				_db_query_update($connect, "UPDATE `transaction` SET `mail_send` = 'unsend' WHERE `order_number` = '$order_number'");
				$output .= 'Не удалось отправить на почту ссылку на чек.<br>';
			}
		} else {
			$output .= 'Не удалось добавить транзакцию в базу данных';
		}
	} else {
		$output .= 'Транзакция уже хранится в базе данных.<br>';
	}

	return $output;
}

/**
 * Implements hook_mail().
 */
function sfu_pay_sber_mail($key, &$message, $params)
{
	switch ($key) {
		// Ключ, добавленный при использовании функции drupal_mail()
		case 'key_mail_sber':
			$message['subject'] = t('Чек об оплате услуги на pay.sfu-kras.ru');
			$message['body'][] = $params['body'];
			break;
	}
}

function transaction_failure()
{
	$output = '<p>Не удалось совершить оплату. Статус транзакции: <b>НЕ оплачено</b>.</p>';
	return $output;
}

/**
 * Страница вывода чека об оплате.
 * Тестовые параметры: ?orderNumber=1594018660&password=ebqhx3z6ck
 */
function cheque_output()
{
	// Вывод шаблоны страницы.
	ob_start();
	require('sberbank-cheque.tpl.php');
	$output = ob_get_contents();
	ob_end_clean();
	return $output;
}

// ! Коды orderStatus:
// 0 - заказ зарегистрирован, но не оплачен;
// 1 - предавторизованная сумма удержана (для двухстадийных платежей);
// 2 - проведена полная авторизация суммы заказа;
// 3 - авторизация отменена;
// 4 - по транзакции была проведена операция возврата;
// 5 - инициирована авторизация через сервер контроля доступа банка-эмитента;
// 6 - авторизация отклонена.

// ! Коды ошибок:
// 0	Обработка запроса прошла без системных ошибок.
// 5 - Доступ запрещён.
// 5 - Пользователь должен сменить свой пароль.
// 5 - [orderId] не задан.
// 6 - Незарегистрированный orderId.
// 7 - Системная ошибка.

// ! Новое в друпал:
// drupal_add_js() - добавляет подключаемый js-файл.
// drupal_get_path() - возвращает путь по типу и имени.

// ! Новое в PHP:
// str_shuffle() - Перемешивает символы в передаваемой строке случайным образом.

// ! Полезные фрагменты кода:
/*
* $link = mysqli_connect("localhost", "root", "", "db_pay");
* if (!$link) {
*     echo "Ошибка: Невозможно установить соединение с MySQL." . PHP_EOL;
*     echo "Код ошибки errno: " . mysqli_connect_errno() . PHP_EOL;
*     echo "Текст ошибки error: " . mysqli_connect_error() . PHP_EOL;
*     exit;
* }
* echo "Соединение с MySQL установлено!" . PHP_EOL;
* echo "Информация о сервере: " . mysqli_get_host_info($link) . PHP_EOL;
* mysqli_close($link);
*/